services:
  postgres-accounts:
    container_name: postgres-accounts
    image: postgres
    environment:
      POSTGRES_DB: accounts
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d accounts"]
      timeout: 10s
      retries: 10
      interval: 10s
      start_period: 10s
    volumes:
      - ./postgres-accounts:/data/postgres
    ports:
      - "5436:5432"
    extends:
      file: ./common-config.yml
      service: network-deploy-service

  rabbit:
    image: rabbitmq:3.13-management
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      timeout: 5s
      retries: 10
      interval: 10s
      start_period: 5s
    extends:
      file: ./common-config.yml
      service: network-deploy-service

  configserver:
    image: "satish2121/configserver:banking"
    container_name: configserver-ms
    ports:
      - "8071:8071"
    healthcheck:
      test: "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1"
      timeout: 5s
      retries: 10
      interval: 10s
      start_period: 10s
    depends_on:
      rabbit:
        condition: service_healthy
    extends:
      file: ./common-config.yml
      service: "microservice-base-config"

  discoveryserver:
    image: "satish2121/discoveryserver:banking"
    container_name: discoveryserver-ms
    ports:
      - "8070:8070"
    healthcheck:
      test: "curl --fail --silent localhost:8070/actuator/health/readiness | grep UP || exit 1"
      timeout: 5s
      retries: 10
      interval: 10s
      start_period: 10s
    depends_on:
      configserver:
        condition: service_healthy
    extends:
      file: ./common-config.yml
      service: "microservice-configserver-config"
    environment:
      SPRING_APPLICATION_NAME: "discoveryserver"

  accounts:
    image: "satish2121/accounts:banking"
    container_name: accounts-ms
    environment:
      SPRING_APPLICATION_NAME: "accounts"
    ports:
      - "8080:8080"
    depends_on:
      postgres-accounts:
        condition: service_healthy
      configserver:
        condition: service_healthy
      discoveryserver:
        condition: service_healthy
    extends:
      file: ./common-config.yml
      service: microservice-configserver-config

  loans:
    image: "satish2121/loans:banking"
    container_name: loans-ms
    environment:
      SPRING_APPLICATION_NAME: "loans"
    ports:
      - "8090:8090"
    depends_on:
      postgres-accounts:
        condition: service_healthy
      configserver:
        condition: service_healthy
      discoveryserver:
        condition: service_healthy
    extends:
      file: ./common-config.yml
      service: microservice-configserver-config

  cards:
    image: "satish2121/cards:banking"
    container_name: cards-ms
    environment:
      SPRING_APPLICATION_NAME: "cards"
    ports:
      - "9000:9000"
    depends_on:
      postgres-accounts:
        condition: service_healthy
      configserver:
        condition: service_healthy
      discoveryserver:
        condition: service_healthy
    extends:
      file: ./common-config.yml
      service: microservice-configserver-config

networks:
  satish:
    driver: "bridge"
